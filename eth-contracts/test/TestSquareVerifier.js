// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier')
var proofJson = require('../../zokrates/code/square/proof.json')

contract('TestSquareVerifier', async (accounts) => {
  const { proof, inputs } = proofJson

  before('setup', async () => {
    // Setup Verifier contract
    this.verifier = await Verifier.new()
  })

  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
  describe('Proof verification', () => {
    it('should return true for correct verification', async () => {
      const success = await this.verifier.verifyTx.call(
        proof.a,
        proof.b,
        proof.c,
        inputs,
      )
      assert.equal(success, true)
    })

    // Test verification with incorrect proof
    it('should return false for incorrect verification', async () => {
      // Mixing the proof up to simulate a wrong proof
      const success = await this.verifier.verifyTx.call(
        proof.c,
        proof.b,
        proof.a,
        inputs,
      )
      assert.equal(success, false)
    })
  })
})
